name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install ESLint and Prettier
      run: npm install --no-save eslint prettier @eslint/js
      
    - name: Check JavaScript code style
      run: npx eslint js/ --ext .js --max-warnings 0
      continue-on-error: true
      
    - name: Check CSS formatting
      run: npx prettier --check "css/**/*.css" "src/**/*.css"
      continue-on-error: true
      
    - name: Check HTML formatting
      run: npx prettier --check "*.html"
      continue-on-error: true

  complexity-analysis:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install complexity analyzer
      run: npm install --no-save complexity-report
      
    - name: Analyze complexity
      run: npx cr --format json --output complexity-report.json js/
      
    - name: Upload complexity report
      uses: actions/upload-artifact@v4
      with:
        name: complexity-report
        path: complexity-report.json

  bundle-size-check:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build CSS
      run: npm run build-css
      
    - name: Check CSS bundle size
      run: |
        echo "CSS Bundle Size Check:"
        ls -lh css/styles.css
        SIZE=$(stat -c%s css/styles.css)
        echo "CSS Bundle size: $SIZE bytes"
        if [ $SIZE -gt 100000 ]; then
          echo "Warning: CSS bundle size exceeds 100KB"
          exit 1
        fi
        
    - name: Install bundlesize
      run: npm install --no-save bundlesize
      
    - name: Check bundle sizes
      run: |
        echo '{
          "files": [
            {
              "path": "./css/styles.css",
              "maxSize": "100kb"
            },
            {
              "path": "./js/app.js",
              "maxSize": "50kb"
            }
          ]
        }' > .bundlesizerc
        npx bundlesize

  accessibility-test:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Install accessibility tools
      run: npm install --no-save @axe-core/cli
      
    - name: Start server for testing
      run: |
        npx http-server . -p 8080 &
        sleep 5
        
    - name: Run accessibility tests
      run: npx axe http://localhost:8080 --exit