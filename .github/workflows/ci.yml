name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20, 22]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build CSS
      run: npm run build-css
      
    - name: Run tests
      run: npm test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: test-results/

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          css/styles.css
          !node_modules/
        retention-days: 30

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Basic performance check
      run: |
        echo "Performance audit placeholder"
        echo "Lighthouse test disabled temporarily for pipeline stability"

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Staging deployment placeholder
      run: |
        echo "Staging deployment would happen here"
        echo "Deployment temporarily disabled for pipeline stability"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build, lighthouse]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Production deployment placeholder
      run: |
        echo "Production deployment would happen here"
        echo "Deployment temporarily disabled for pipeline stability"