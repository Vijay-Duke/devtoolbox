name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.3)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Run tests
      run: npm test
      
    - name: Generate changelog
      id: changelog
      run: |
        if [ -n "${{ github.event.inputs.version }}" ]; then
          TAG_NAME="${{ github.event.inputs.version }}"
        else
          TAG_NAME="${{ github.ref_name }}"
        fi
        
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -n "$PREV_TAG" ]; then
          echo "## What's Changed" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "First release of DevToolbox - A fast, minimal, privacy-first collection of developer utilities." >> CHANGELOG.md
        fi
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create release bundle
      run: |
        mkdir -p release
        cp -r css js icons manifest.json sw.js index.html _headers _redirects release/
        tar -czf devtoolbox-${{ steps.changelog.outputs.tag_name }}.tar.gz -C release .
        zip -r devtoolbox-${{ steps.changelog.outputs.tag_name }}.zip release/
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.changelog.outputs.tag_name }}
        name: DevToolbox ${{ steps.changelog.outputs.tag_name }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        files: |
          devtoolbox-${{ steps.changelog.outputs.tag_name }}.tar.gz
          devtoolbox-${{ steps.changelog.outputs.tag_name }}.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: create-release
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: |
          node_modules
          tests
          .github
          *.md
          server
        tag_name: ${{ needs.create-release.outputs.tag_name }}
        tag_message: 'Production deployment for ${{ needs.create-release.outputs.tag_name }}'